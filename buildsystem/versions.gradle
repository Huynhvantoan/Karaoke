ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = "3.2.0-alpha15"
//Support
versions.arch               = "2.0.0-alpha1"
versions.support            = "1.0.0-alpha1"
versions.work               = "1.0.0-alpha02"
versions.supportAnko        = "0.10.5"
versions.kotlin             = "1.2.41"
versions.mutidex            = "2.0.0"
versions.navigation         = "1.0.0-alpha01"
versions.constraint_layout  = "1.1.0"
//Libraries :Core
versions.dagger             = "2.16"
versions.logger             = "2.1.1"
versions.glide              = "4.7.1"
versions.eventbus           = "3.1.1"
versions.retrofit           = "2.4.0"
versions.okHttp             = "3.10.0"
versions.okHttpLogging      = "2.0.5"
//Utils
versions.utilcode           = "1.15.1"
versions.rich               = "2.2.1"
versions.kotlinify          = "1.3.1"
//Libraries: Development
versions.leakCanary         = "1.5.4"
versions.blockcanary        = "1.5.0"
versions.stetho             = "1.5.0"
versions.realmStetho        = "2.1.0"
//Libraries :App
versions.exoplayer          = "2.8.1"

def deps = [:]

def support = [:]
support.annotations         = "androidx.annotation:annotation:$versions.support"
support.app_compat          = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview        = "androidx.recyclerview:recyclerview:$versions.support"
support.design              = "com.google.android.material:material:$versions.support"
support.constraint_layout   = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.support = support

def core = [:]
core.eventbus               = "org.greenrobot:eventbus:$versions.eventbus"
core.logger                 = "com.orhanobut:logger:$versions.logger"
deps.core = core

def libCore =[:]
libCore.ok_httpLogging      = "com.github.ihsanbal:LoggingInterceptor:$versions.okHttpLogging"
libCore.glide_recycler      = "com.github.bumptech.glide:recyclerview-integration:$versions.glide"
deps.libCore = libCore

def utils =[:]
utils.utilcode              = "com.blankj:utilcode:$versions.utilcode"
utils.ktx                   = "androidx.core:core-ktx:$versions.support"
utils.anko_commons          = "org.jetbrains.anko:anko-commons:$versions.supportAnko"
//utils.reactivenetwork       = "com.github.pwittchen:reactivenetwork-rx2:$versions.reactivenetwork"
utils.kotlinify             = "com.github.GilGoldzweig.kotlinify:reactive:$versions.kotlinify"
utils.rich                  = "com.github.WindSekirun:RichUtilsKt:$versions.rich"
deps.utils = utils

def room = [:]
room.runtime                = "androidx.room:room-runtime::$versions.arch"
room.compiler               = "androidx.room:room-compiler:$versions.arch"
room.rxjava2                = "androidx.room:room-rxjava2:$versions.arch"
room.testing                = "androidx.room:room-testing:$versions.arch"
deps.room = room

def lifecycle = [:]
lifecycle.runtime           = "androidx.lifecycle:lifecycle-runtime:$versions.arch"
lifecycle.extensions        = "androidx.lifecycle:lifecycle-extensions:$versions.arch"
lifecycle.java8             = "androidx.lifecycle:lifecycle-common-java8:$versions.arch"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing           = "android.arch.core:core-testing:$versions.arch"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime            = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson               = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.simplexml          = "com.squareup.retrofit2:converter-simplexml:$versions.retrofit"
retrofit.rxjava             = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.okhttp             = "com.squareup.okhttp3:okhttp:$versions.okHttp"
deps.retrofit = retrofit

def glide = [:]
glide.glide                 = "com.github.bumptech.glide:glide:$versions.glide"
glide.integration           = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
deps.glide = glide

def dagger = [:]
dagger.runtime              = "com.google.dagger:dagger:$versions.dagger"
dagger.android              = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support      = "com.google.dagger:dagger-android-support:$versions.dagger"
deps.dagger = dagger

def work = [:]
work.runtime                = "androidx.work:work-runtime-ktx:$versions.work"
work.testing                = "androidx.work:work-testing:$versions.work"
work.firebase               = "androidx.work:work-firebase:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime          = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.fragment         = "android.arch.navigation:navigation-fragment:$versions.navigation"
navigation.ui               = "android.arch.navigation:navigation-ui:$versions.navigation"
deps.navigation = navigation

def library = [:]
library.exoplayer           = "com.google.android.exoplayer:exoplayer:$versions.exoplayer"
deps.library = library

def compiler = [:]
compiler.glide              = "com.github.bumptech.glide:compiler:$versions.glide"
compiler.lifecycle          = "androidx.lifecycle:lifecycle-compiler:$versions.arch"
compiler.dagger_compiler    = "com.google.dagger:dagger-compiler:$versions.dagger"
compiler.android_compiler   = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.compiler = compiler

def test = [:]
test.leakcanary             = "com.squareup.leakcanary:leakcanary-android:$versions.leakCanary"
test.leakcanary_no_op       = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakCanary"
test.blockDebug             = "com.github.markzhai:blockcanary-android:$versions.blockcanary"
test.blockRelease           = "com.github.markzhai:blockcanary-no-op:$versions.blockcanary"
deps.test = test

def kotlin = [:]
kotlin.stdlib               = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test                 = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
deps.kotlin = kotlin

deps.android_gradle_plugin  = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.kotlin_plugin          = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin_allopen         = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.safe_args_plugin       = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.multidex               = "androidx.multidex:multidex:$versions.mutidex"
ext.deps = deps

def build_versions = [:]
build_versions.app_id       = "skymusic.com.vn.karaoke"
build_versions.build_tool   = "28.0.0-rc2"
build_versions.minSdk       = 21
build_versions.compileSdk   = "android-P"
build_versions.targetSdk    = "P"
build_versions.versionCode  = 1
build_versions.versionName  = "1.0.0"
ext.build_versions = build_versions

def key_store = [:]
key_store.keystore          = "$rootProject.projectDir/buildsystem/keystore.jks"
key_store.keystorePass      = "acutek1234"
key_store.alias             = "acutek solution"
key_store.aliasPass         = "acutek1234"
key_store.proguard_rules    = "$rootProject.projectDir/buildsystem/proguard-rules.pro"
key_store.proguard_rx       = "$rootProject.projectDir/buildsystem/proguard-rx-rules.pro"
key_store.proguard_square   = "$rootProject.projectDir/buildsystem/proguard-square.pro"
key_store.proguard_support  = "$rootProject.projectDir/buildsystem/proguard-support.pro"
ext.key_store = key_store

@SuppressWarnings("GrMethodMayBeStatic")
def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
        url 'https://jitpack.io'}
}
ext.addRepos = this.&addRepos
